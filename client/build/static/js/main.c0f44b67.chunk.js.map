{"version":3,"sources":["assets/logo/logo.svg","components/nav/Nav.js","assets/icons/close-24px.svg","components/SelectCoinModal/SelectCoinModal.js","modules/crud.js","components/SuccessModal/SuccessModal.js","components/SwapPage/SwapPage.js","components/PoolPage/PoolPage.js","components/MarketPage/MarketPage.js","components/BuyModal/BuyModal.js","components/NotFound/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","activeStyle","backgroundColor","borderRadius","padding","className","to","src","logo","alt","SelectCoinModal","coinsList","selectBase","selectSwap","baseModal","swapModal","toggle","swapCoin","baseCoin","useState","search","setSearch","filtered","setFiltererd","random5","useEffect","filter","coin","name","toLowerCase","includes","symbol","onClick","close","onChange","e","target","value","type","placeholder","slice","sort","Math","random","map","disabled","id","image","coinId","useFetch","url","initialState","data","setData","setError","firstData","setFirstData","a","axios","get","res","message","SuccessModal","toggleSuccess","successModal","container","setSuccessModal","useRef","lottie","loadAnimation","current","renderer","autoplay","loop","animationData","require","ref","SwapPage","coinData","firstCoinData","pricesData","setBaseCoin","setSwapCoin","baseCalc","setBaseCalc","swapCalc","setSwapCalc","modal","setModal","postTransaction","setTransaction","post","then","console","log","catch","err","find","coinSearch","calcBasePrice","currentCoin","price","calcSwapPrice","selector","toSwitch","setSwitch","onSubmit","preventDefault","transaction","base_coin","swap_coin","base_input","base","swap_input","swap","base_calc","swap_calc","reset","handleSubmit","toToggle","PoolPage","Component","MarketPage","BuyModal","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f44b67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.90ba4236.svg\";","import React from \"react\";\r\nimport \"./nav.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport logo from \"../../assets/logo/logo.svg\";\r\nimport { FaCreditCard, FaStoreAlt, FaWater } from \"react-icons/fa\";\r\n\r\nexport const Nav = () => {\r\n  const activeStyle = {\r\n    backgroundColor: \"#f1f3f0\",\r\n    borderRadius: \"15px\",\r\n    padding: \"8px\",\r\n  };\r\n  return (\r\n    <nav className=\"nav\">\r\n      <Link to=\"/swap\">\r\n        <img className=\"nav__logo\" src={logo} alt=\"\" />\r\n      </Link>\r\n      <ul className=\"nav__list\">\r\n        <NavLink activeStyle={activeStyle} to=\"/swap\">\r\n          <li className=\"nav__list-item\">\r\n            <FaStoreAlt />\r\n            Swap\r\n          </li>\r\n        </NavLink>\r\n        <NavLink activeStyle={activeStyle} to=\"pool\">\r\n          <li className=\"nav__list-item\">\r\n            <FaWater />\r\n            Pool\r\n          </li>\r\n        </NavLink>\r\n        <NavLink activeStyle={activeStyle} to=\"Buy\">\r\n          <li className=\"nav__list-item\">\r\n            <FaCreditCard />\r\n            Buy\r\n          </li>\r\n        </NavLink>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/close-24px.4862ddd5.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport close from \"../../assets/icons/close-24px.svg\";\r\nimport \"./SelectCoinModal.scss\";\r\n\r\nconst SelectCoinModal = ({\r\n  coinsList,\r\n  selectBase,\r\n  selectSwap,\r\n  baseModal,\r\n  swapModal,\r\n  toggle,\r\n  swapCoin,\r\n  baseCoin,\r\n}) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltererd] = useState(coinsList);\r\n\r\n  const random5 = [...coinsList];\r\n\r\n  useEffect(() => {\r\n    setFiltererd(\r\n      coinsList.filter((coin) => {\r\n        return (\r\n          coin.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          coin.symbol.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n      })\r\n    );\r\n  }, [search, coinsList]);\r\n\r\n  const handleClick = () => {\r\n    if (baseModal) {\r\n      toggle(\"one\");\r\n    } else if (swapModal) {\r\n      toggle(\"two\");\r\n    }\r\n  };\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const onDisabled = (coinId) => {\r\n    if (!swapCoin) {\r\n      if (baseCoin.id === coinId) {\r\n        return \"disabled\";\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } else {\r\n      if (baseCoin.id === coinId || swapCoin.id === coinId) {\r\n        return \"disabled\";\r\n      } else {\r\n        return \"\"\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!baseCoin && !swapCoin) {\r\n    return <p>...Loading...</p>;\r\n  } else {\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal__pop\">\r\n          <div className=\"modal__pop-close-container\">\r\n            <h4>Select a Token</h4>\r\n            <img\r\n              className=\"modal__pop-close\"\r\n              onClick={handleClick}\r\n              src={close}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <input\r\n            className=\"modal__input input-swapModal\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Search for name\"\r\n          />\r\n          <h4>Common Bases</h4>\r\n          <ul className=\"modal__commonBases\">\r\n            {random5\r\n              .slice(0, 20) //from top 100 to top 20\r\n              .sort(() => 0.5 - Math.random())\r\n              .slice(0, 5)\r\n              .map((coin) => {\r\n                return (\r\n                  <li\r\n                  disabled={\r\n                    !swapCoin\r\n                      ? baseCoin.id === coin.id\r\n                      : baseCoin.id === coin.id || swapCoin.id === coin.id\r\n                  }\r\n                    key={coin.id}\r\n                    \r\n                    className=\"modal__commonBases-item\"\r\n                  >\r\n                    <button\r\n                      disabled={\r\n                        !swapCoin\r\n                          ? baseCoin.id === coin.id\r\n                          : baseCoin.id === coin.id || swapCoin.id === coin.id\r\n                      }\r\n                      className=\"modal__random-button button-swapModal\"\r\n                      onClick={() => {\r\n                        if (baseModal) {\r\n                          selectBase(coin.id);\r\n                        } else if (swapModal) {\r\n                          selectSwap(coin.id);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <img\r\n                        className=\"sp__token-image\"\r\n                        id=\"one\"\r\n                        src={coin.image}\r\n                        alt={coin.image}\r\n                      />\r\n                      <p id=\"one\">{coin.symbol}</p>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <div className=\"modal__coinsList\">\r\n            <ul className=\"modal__coinsList-ul\">\r\n              {filtered.map((coin) => (\r\n                <button\r\n                  key={coin.id}\r\n                  onClick={() => {\r\n                    if (baseModal) {\r\n                      selectBase(coin.id);\r\n                    } else if (swapModal) {\r\n                      selectSwap(coin.id);\r\n                    }\r\n                  }}\r\n                  disabled={\r\n                    !swapCoin\r\n                      ? baseCoin.id === coin.id\r\n                      : baseCoin.id === coin.id || swapCoin.id === coin.id\r\n                  }\r\n                  //\"modal__coinsList-item\"\r\n                  className={`modal__coinsList-item ${onDisabled(coin.id)}`}\r\n                >\r\n                  <img\r\n                    className=\"modal__coinsList-image\"\r\n                    src={coin.image}\r\n                    alt=\"\"\r\n                  />\r\n                  <div>\r\n                    <p className=\"modal__coinsList-symbol\">{coin.symbol}</p>\r\n                    <p className=\"modal__coinsList-name\">{coin.name}</p>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SelectCoinModal;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url, initialState) => {\r\n  const [data, setData] = useState(initialState);\r\n  const [error, setError] = useState(\"\");\r\n  const [firstData, setFirstData] = useState(null)\r\n\r\n  useEffect(() => {\r\n     (async () => {\r\n      try {\r\n        const res = await axios.get(url);\r\n        const data = res.data.data.slice(0,100);\r\n        setData(data);\r\n        setFirstData(data[0])\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    })()\r\n   \r\n  }, [url]);\r\n\r\n  return [data, firstData];\r\n};\r\n\r\n// export const usePost = (url, data) => {\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//      (async () => {\r\n//       try {\r\n//         await axios.post(url, data);\r\n//       } catch (err) {\r\n//         setError(error.message);\r\n//       }\r\n//     })()\r\n   \r\n//   }, [url]);\r\n// };\r\n\r\nexport default useFetch;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./SuccessModal.scss\";\r\nimport lottie from \"lottie-web\";\r\n\r\nconst SuccessModal = ({ toggleSuccess, successModal,setSuccessModal }) => {\r\n  const onClick = () => {\r\n    toggleSuccess(successModal);\r\n  };\r\n\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: container.current,\r\n      renderer: \"svg\",\r\n      autoplay: true,\r\n      loop: false,\r\n      animationData: require(\"../../assets/lottie/tick.json\"),\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sModal\">\r\n        <div className=\"sModal__pop\">\r\n          <div ref={container} className=\"sModal__lottieContainer\"></div>\r\n          <button onClick={onClick}>Continue</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessModal;\r\n","import \"./SwapPage.scss\";\r\nimport { FaArrowsAltV, FaChevronDown } from \"react-icons/fa\";\r\nimport SelectCoinModal from \"../SelectCoinModal/SelectCoinModal\";\r\n\r\nimport useFetch from \"../../modules/crud\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SuccessModal from \"../SuccessModal/SuccessModal\";\r\n// import FormErrors from \"../FormErrors/FormErrors\";\r\n\r\nconst URL_Full =\r\n  \"https://api.lunarcrush.com/v2?data=meta&key=xyl8sb958pi25pq0efjjqn&type=full\";\r\nconst URL_Price =\r\n  \"https://api.lunarcrush.com/v2?data=meta&key=xyl8sb958pi25pq0efjjqn&type=price\";\r\nconst URL_SWAP = \"http://localhost:3010/swap\";\r\n\r\nconst SwapPage = () => {\r\n  const [coinData, firstCoinData] = useFetch(URL_Full, []);\r\n  const [pricesData] = useFetch(URL_Price, []);\r\n\r\n  const [baseCoin, setBaseCoin] = useState(null);\r\n  const [swapCoin, setSwapCoin] = useState(null);\r\n\r\n  const [baseCalc, setBaseCalc] = useState(0);\r\n  const [swapCalc, setSwapCalc] = useState(0);\r\n\r\n  const [modal, setModal] = useState({ baseModal: false, swapModal: false });\r\n\r\n  const [postTransaction, setTransaction] = useState([]);\r\n\r\n  const [successModal, setSuccessModal] = useState(false);\r\n\r\n  // const [formError, setFormError] = useState({ swapChoice: false });\r\n\r\n  // const [toSwitch, setSwitch] = useState(true);\r\n  // const onSwitch = () => {\r\n  //   setSwitch((toSwitch) => !toSwitch);\r\n  // };\r\n\r\n  const toggleSuccess = () => {\r\n    setSuccessModal((toToggle) => !toToggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSuccessModal(successModal);\r\n  }, [successModal]);\r\n\r\n  useEffect(() => {\r\n    setBaseCoin(firstCoinData);\r\n  }, [firstCoinData]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(URL_SWAP, postTransaction)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(\"err\", err));\r\n  }, [postTransaction]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( !baseCoin || !swapCoin || !baseCalc || !swapCalc) {\r\n      return console.log(\"select fields\");\r\n    } else {\r\n      const transaction = {\r\n        base_coin: baseCoin.name,\r\n        swap_coin: swapCoin.name,\r\n        base_input: e.target.base.value,\r\n        swap_input: e.target.swap.value,\r\n        base_calc: baseCalc,\r\n        swap_calc: swapCalc,\r\n      };\r\n      \r\n      setTransaction(transaction);\r\n      setSuccessModal(successModal);\r\n    }\r\n    e.target.reset();\r\n  };\r\n\r\n  const selectBase = (coinId) => {\r\n    let baseCoin = coinData.find((coinSearch) => coinSearch.id === coinId);\r\n    setBaseCoin(baseCoin);\r\n    setSwapCoin(swapCoin);\r\n    setModal({\r\n      baseModal: false,\r\n    });\r\n  };\r\n\r\n  const selectSwap = (coinId) => {\r\n    let swapCoin = coinData.find((coinSearch) => coinSearch.id === coinId);\r\n    setBaseCoin(baseCoin);\r\n    setSwapCoin(swapCoin);\r\n    setModal({\r\n      swapModal: false,\r\n    });\r\n  };\r\n\r\n  const calcBasePrice = (value) => {\r\n    const currentCoin = pricesData.find(\r\n      (coinSearch) => coinSearch.id === baseCoin.id\r\n    );\r\n    setBaseCalc(currentCoin.price * value);\r\n  };\r\n\r\n  const calcSwapPrice = (value) => {\r\n    const currentCoin = pricesData.find(\r\n      (coinSearch) => coinSearch.id === swapCoin.id\r\n    );\r\n    setSwapCalc(currentCoin.price * value);\r\n  };\r\n\r\n  const toggle = (selector) => {\r\n    if (selector === \"one\") {\r\n      setModal({\r\n        baseModal: !modal.baseModal,\r\n      });\r\n    } else if (selector === \"two\") {\r\n      setModal({\r\n        swapModal: !modal.swapModal,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [toSwitch, setSwitch] = useState(true);\r\n  const onSwitch = () => {\r\n    setSwitch((toSwitch) => !toSwitch);\r\n  };\r\n\r\n  return (\r\n    <section className=\"sp\">\r\n      <div className=\"sp__card\">\r\n        <h3>Swap</h3>\r\n        <form onSubmit={(e) => handleSubmit(e)} className=\"sp__container\">\r\n          <div className=\"sp__tokens-frame\">\r\n            {toSwitch && (\r\n              <div className=\"sp__token-container\">\r\n                <div className=\"sp__token-container--top\">\r\n                  <button\r\n                    className=\"sp__token-button\"\r\n                    id=\"one\"\r\n                    onClick={(e) => toggle(e.target.id)}\r\n                  >\r\n                    <img\r\n                      className=\"sp__token-image\"\r\n                      id=\"one\"\r\n                      src={\r\n                        baseCoin\r\n                          ? baseCoin.image\r\n                          : \"\thttps://dkhpfm5hits1w.cloudfront.net/bitcoin.png\"\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                    <p id=\"one\">{baseCoin ? baseCoin.symbol : \"BTC\"}</p>\r\n                    <FaChevronDown id=\"one\" />\r\n                  </button>\r\n                  {modal.baseModal ? (\r\n                    <SelectCoinModal\r\n                      toggle={toggle}\r\n                      coinsList={coinData}\r\n                      selectBase={selectBase}\r\n                      baseModal={modal.baseModal}\r\n                      swapCoin={swapCoin}\r\n                      baseCoin={baseCoin}\r\n                    />\r\n                  ) : null}\r\n                  <input\r\n                    name=\"base\"\r\n                    className=\"sp__token-input\"\r\n                    onChange={(e) => calcBasePrice(e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"0.0\"\r\n                  />\r\n                </div>\r\n                <div className=\"sp__token-container--bottom\">\r\n                  {baseCalc ? <p>~$ {baseCalc}</p> : null}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {!toSwitch && (\r\n              <div className=\"sp__token-container\">\r\n                <div className=\"sp__token-container--top\">\r\n                  <button\r\n                    className={\r\n                      swapCoin\r\n                        ? \"sp__token-button\"\r\n                        : \"sp__token-button--toSelect\"\r\n                    }\r\n                    id=\"two\"\r\n                    onClick={(e) => toggle(e.target.id)}\r\n                  >\r\n                    <img\r\n                      className=\"sp__token-image\"\r\n                      id=\"two\"\r\n                      src={swapCoin ? swapCoin.image : \"\"}\r\n                      alt=\"\"\r\n                    />\r\n                    <p id=\"two\">\r\n                      {swapCoin ? swapCoin.symbol : \"Select a Token\"}\r\n                    </p>\r\n                    <FaChevronDown id=\"two\" />\r\n                  </button>\r\n                  {modal.swapModal ? (\r\n                    <SelectCoinModal\r\n                      toggle={toggle}\r\n                      coinsList={coinData}\r\n                      selectSwap={selectSwap}\r\n                      swapModal={modal.swapModal}\r\n                      swapCoin={swapCoin}\r\n                      baseCoin={baseCoin}\r\n                    />\r\n                  ) : null}\r\n                  <input\r\n                    name=\"swap\"\r\n                    className=\"sp__token-input\"\r\n                    onChange={(e) => calcSwapPrice(e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"0.0\"\r\n                    disabled={swapCoin ? false : true}\r\n                  />\r\n                </div>\r\n                <div className=\"sp__token-container--bottom\">\r\n                  {swapCalc ? <p>~$ {swapCalc}</p> : null}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <FaArrowsAltV onClick={onSwitch} className=\"sp__switch\" />\r\n\r\n            {toSwitch && (\r\n              <div className=\"sp__token-container\">\r\n                <div className=\"sp__token-container--top\">\r\n                  <button\r\n                    className={\r\n                      swapCoin\r\n                        ? \"sp__token-button\"\r\n                        : \"sp__token-button--toSelect\"\r\n                    }\r\n                    id=\"two\"\r\n                    onClick={(e) => toggle(e.target.id)}\r\n                  >\r\n                    <img\r\n                      className=\"sp__token-image\"\r\n                      id=\"two\"\r\n                      src={swapCoin ? swapCoin.image : \"\"}\r\n                      alt=\"\"\r\n                    />\r\n                    <p id=\"two\">\r\n                      {swapCoin ? swapCoin.symbol : \"Select a Token\"}\r\n                    </p>\r\n                    <FaChevronDown id=\"two\" />\r\n                  </button>\r\n                  {modal.swapModal ? (\r\n                    <SelectCoinModal\r\n                      toggle={toggle}\r\n                      coinsList={coinData}\r\n                      selectSwap={selectSwap}\r\n                      swapModal={modal.swapModal}\r\n                      swapCoin={swapCoin}\r\n                      baseCoin={baseCoin}\r\n                    />\r\n                  ) : null}\r\n                  <input\r\n                    name=\"swap\"\r\n                    className=\"sp__token-input\"\r\n                    onChange={(e) => calcSwapPrice(e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"0.0\"\r\n                    disabled={swapCoin ? false : true}\r\n                  />\r\n                </div>\r\n                <div className=\"sp__token-container--bottom\">\r\n                  {swapCalc ? <p>~$ {swapCalc}</p> : null}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!toSwitch && (\r\n              <div className=\"sp__token-container\">\r\n                <div className=\"sp__token-container--top\">\r\n                  <button\r\n                    className=\"sp__token-button\"\r\n                    id=\"one\"\r\n                    onClick={(e) => toggle(e.target.id)}\r\n                  >\r\n                    <img\r\n                      className=\"sp__token-image\"\r\n                      id=\"one\"\r\n                      src={\r\n                        baseCoin\r\n                          ? baseCoin.image\r\n                          : \"\thttps://dkhpfm5hits1w.cloudfront.net/bitcoin.png\"\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                    <p id=\"one\">{baseCoin ? baseCoin.symbol : \"BTC\"}</p>\r\n                    <FaChevronDown id=\"one\" />\r\n                  </button>\r\n                  {modal.baseModal ? (\r\n                    <SelectCoinModal\r\n                      toggle={toggle}\r\n                      coinsList={coinData}\r\n                      selectBase={selectBase}\r\n                      baseModal={modal.baseModal}\r\n                      swapCoin={swapCoin}\r\n                      baseCoin={baseCoin}\r\n                    />\r\n                  ) : null}\r\n                  <input\r\n                    name=\"base\"\r\n                    className=\"sp__token-input\"\r\n                    onChange={(e) => calcBasePrice(e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"0.0\"\r\n                  />\r\n                </div>\r\n                <div className=\"sp__token-container--bottom\">\r\n                  {baseCalc ? <p>~$ {baseCalc}</p> : null}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            // onClick={() =>\r\n            //   (window.location.href = \"https://yoroi-wallet.com/#/\")\r\n            // // }\r\n            onClick={() =>\r\n             setSuccessModal(!successModal)\r\n            }\r\n            className=\"sp__submit button-pay\"\r\n          >\r\n            Swap Coins\r\n          </button>\r\n          {successModal && (\r\n            <SuccessModal\r\n              toggleSuccess={toggleSuccess}\r\n              successModal={successModal}\r\n            />\r\n          )}\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SwapPage;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PoolPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class MarketPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst BuyModal = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuyModal\r\n","import React from 'react'\r\nimport './NotFound.scss'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"http__404\">\r\n            <h1>404: Not Found</h1>\r\n            <h2>This page does not exist</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import \"./App.scss\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport Nav from \"./components/nav/Nav\";\r\nimport SwapPage from \"./components/SwapPage/SwapPage\";\r\nimport PoolPage from \"./components/PoolPage/PoolPage\";\r\nimport MarketPage from \"./components/MarketPage/MarketPage\";\r\nimport BuyModal from \"./components/BuyModal/BuyModal\";\r\nimport NotFound from \"./components/NotFound/NotFound\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <main className=\"main\">\r\n        <Nav />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MarketPage}/>\r\n          <Route path=\"/swap\" component={SwapPage}/>\r\n          <Route path=\"/pool\" component={PoolPage}/>\r\n          <Route path=\"/buy\" component={BuyModal}/>\r\n          <Route component={NotFound}/>\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}